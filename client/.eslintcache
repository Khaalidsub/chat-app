[{"/app/src/index.tsx":"1","/app/src/pages/chat.tsx":"2","/app/src/pages/register.tsx":"3","/app/src/pages/Home.tsx":"4","/app/src/App.tsx":"5","/app/src/utilities/schema.ts":"6","/app/src/widgets/Message.tsx":"7","/app/src/widgets/InputFieldForm.tsx":"8","/app/src/utilities/constants.ts":"9","/app/src/widgets/UserCard.tsx":"10","/app/src/pages/chats.tsx":"11","/app/src/pages/Sign.tsx":"12","/app/src/widgets/ButtonForm.tsx":"13","/app/src/pages/login.tsx":"14","/app/src/Components/RegisterForm.tsx":"15","/app/src/reportWebVitals.ts":"16","/app/src/ApolloClient.tsx":"17","/app/src/widgets/SearchField.tsx":"18"},{"size":2089,"mtime":1611317581288,"results":"19","hashOfConfig":"20"},{"size":4601,"mtime":1611305650589,"results":"21","hashOfConfig":"20"},{"size":833,"mtime":1611243819060,"results":"22","hashOfConfig":"20"},{"size":2914,"mtime":1611248115580,"results":"23","hashOfConfig":"20"},{"size":922,"mtime":1611250627133,"results":"24","hashOfConfig":"25"},{"size":2152,"mtime":1609511304020,"results":"26","hashOfConfig":"20"},{"size":926,"mtime":1609511304025,"results":"27","hashOfConfig":"20"},{"size":1102,"mtime":1609511304024,"results":"28","hashOfConfig":"20"},{"size":667,"mtime":1611250177729,"results":"29","hashOfConfig":"20"},{"size":954,"mtime":1609511304028,"results":"30","hashOfConfig":"20"},{"size":5116,"mtime":1611305175655,"results":"31","hashOfConfig":"20"},{"size":2103,"mtime":1611307962951,"results":"32","hashOfConfig":"20"},{"size":324,"mtime":1609511304022,"results":"33","hashOfConfig":"20"},{"size":950,"mtime":1611307938758,"results":"34","hashOfConfig":"20"},{"size":1458,"mtime":1609511304006,"results":"35","hashOfConfig":"20"},{"size":425,"mtime":1607328705283,"results":"36","hashOfConfig":"20"},{"size":2270,"mtime":1611318241367,"results":"37","hashOfConfig":"20"},{"size":696,"mtime":1609511304027,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},"1jejgda",{"filePath":"43","messages":"44","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"dv1q3u",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/app/src/index.tsx",["81","82","83","84","85","86"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache, NormalizedCacheObject, split } from '@apollo/client';\r\nimport { WebSocketLink } from '@apollo/client/link/ws';\r\nimport { getMainDefinition } from '@apollo/client/utilities';\r\nimport { authHttpLink, AUTH_TOKEN } from './utilities/constants';\r\nimport { useClient } from './ApolloClient';\r\n\r\n// let cache = new InMemoryCache();\r\n\r\n// const api = process.env.NODE_ENV === 'development' ? 'localhost/chat/graphql' : 'localhost/chat/graphql';\r\n// const ws = process.env.NODE_ENV === 'development' ? 'localhost/chat/graphql' : 'localhost/chat/graphql';\r\n\r\n\r\n\r\n// const wsLink =\r\n//   new WebSocketLink({\r\n\r\n//     uri: `ws://${ws}`,\r\n//     options: {\r\n//       reconnect: true,\r\n//       connectionParams: () => ({\r\n//         authorization: `Bearer ${localStorage.getItem(AUTH_TOKEN)}`,\r\n//       }),\r\n//     },\r\n//   })\r\n\r\n// const httpLink = new HttpLink({\r\n//   uri: `http://${api}`,\r\n\r\n// })\r\n\r\n// const splitLink = split(\r\n//   ({ query }) => {\r\n//     const definition = getMainDefinition(query);\r\n//     return (\r\n//       definition.kind === 'OperationDefinition' &&\r\n//       definition.operation === 'subscription'\r\n//     );\r\n//   },\r\n//   wsLink,\r\n//   authHttpLink.concat(httpLink),\r\n// );\r\n\r\nconst RenderApp = () => {\r\n  const token = localStorage.getItem(AUTH_TOKEN);\r\n  const authClient = useClient(token);\r\n  const client: ApolloClient<NormalizedCacheObject> = new ApolloClient({ ...authClient })\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>)\r\n}\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\r\n    <RenderApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["87","88"],"/app/src/pages/chat.tsx",["89","90","91","92","93","94","95","96","97","98","99","100"],"/app/src/pages/register.tsx",[],"/app/src/pages/Home.tsx",["101","102","103"],"import { useQuery } from '@apollo/client'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { CHATS, CHAT_MESSAGES, MESSAGE_ADDED } from '../utilities/schema'\r\nimport { chatMessages, chatMessagesVariables } from '../utilities/__generated__/chatMessages'\r\nimport { chats } from '../utilities/__generated__/chats'\r\nimport { currentUser_currentUser } from '../utilities/__generated__/currentUser'\r\nimport { onChatMessage } from '../utilities/__generated__/onChatMessage'\r\nimport Chat from './chat'\r\nimport Chats from './chats'\r\n\r\nexport interface HomeProps {\r\n    currentUser: currentUser_currentUser\r\n}\r\n\r\nfunction Home(props: HomeProps) {\r\n    const { data, loading, error } = useQuery<chats>(CHATS)\r\n    const [currentChat, setCurrentChat] = useState('');\r\n    const [showChat, setshowChat] = useState(true)\r\n    // useEffect(() => {\r\n\r\n    //     // if (showChat) setCurrentChat(null)\r\n\r\n    // }, [showChat])\r\n    const { ...result } = useQuery<chatMessages, chatMessagesVariables>(CHAT_MESSAGES, { variables: { id: currentChat } })\r\n    const settingCurrentChat = (value: string) => {\r\n        setCurrentChat(value)\r\n        setshowChat(false);\r\n    }\r\n\r\n\r\n    const subscribeToNewMessages = () =>\r\n        result.subscribeToMore<onChatMessage>({\r\n            document: MESSAGE_ADDED,\r\n            variables: { id: currentChat },\r\n            updateQuery: (prev, { subscriptionData }) => {\r\n                console.log('in sub sub', subscriptionData);\r\n\r\n                if (!subscriptionData.data) return prev\r\n                const newMessages = subscriptionData.data.onChatMessage\r\n                return Object.assign({}, prev, {\r\n                    chatMessages: [...prev.chatMessages, newMessages]\r\n                });\r\n\r\n\r\n            }\r\n\r\n        })\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"flex justify-center\">\r\n\r\n\r\n                <div className=\"md:h-2/3 md:w-2/3 w-full h-4/5 px-4  mx-auto my-auto flex flex-row py-px border border-gray-50 bg-gray-50 rounded-3xl shadow-lg\">\r\n                    <div className={`md:w-2/5 md:flex w-full ${showChat ? '' : 'hidden'}`}>\r\n                        <Chats currentChat={currentChat} chats={data ? data.chats : []} onClick={settingCurrentChat} currentUser={props.currentUser.id} />\r\n                    </div>\r\n\r\n                    <div className={`w-full md:w-3/5 pt-3 rounded-3xl md:block ${!showChat ? '' : 'hidden'} `}>\r\n                        <button className='text-customBlue pl-2 pb-2 md:hidden' onClick={() => setshowChat(true)}>Back</button>\r\n                        {currentChat.length > 1 ? <Chat subscribeToMore={subscribeToNewMessages} chatMessages={result.data ? result.data.chatMessages : []} user={props.currentUser} currentChat={currentChat} /> : <div></div>}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Home","/app/src/App.tsx",["104","105","106"],"/app/src/utilities/schema.ts",[],["107","108"],"/app/src/widgets/Message.tsx",[],"/app/src/widgets/InputFieldForm.tsx",[],"/app/src/utilities/constants.ts",[],"/app/src/widgets/UserCard.tsx",[],["109","110"],"/app/src/pages/chats.tsx",["111","112","113"],"/app/src/pages/Sign.tsx",["114"],"import React, { useState } from \"react\";\r\nimport SignUp from \"./register\";\r\nimport SignIn from \"./login\";\r\n\r\nexport interface SignProps {\r\n    fetchCurrentUser: Function;\r\n}\r\n\r\nexport interface SignState { }\r\n\r\nexport enum SignType {\r\n    register = \"Register\",\r\n    login = \"Login\",\r\n}\r\n\r\nconst Sign: React.FC<SignProps> = (props: SignProps) => {\r\n    const [signType, setsignType] = useState(SignType.register);\r\n    const [errorMessage, seterrorMessage] = useState(\"\");\r\n    const RenderTypeForm = () => {\r\n        return (\r\n            <div className=\" h-8 mx-auto mt-12 max-w-xs text-center grid grid-cols-2 bg-secondary-background rounded-full border border-customBlue\">\r\n                <button\r\n                    onClick={() => setsignType(SignType.register)}\r\n                    className=\"my-auto border-r  focus:text-secondary focus:shadow-inner rounded-full cursor-pointer focus:outline-none text-primary\"\r\n                >\r\n                    Sign Up\r\n        </button>\r\n\r\n                <button\r\n                    onClick={() => setsignType(SignType.login)}\r\n                    className=\"my-auto border-l focus:text-secondary   focus:shadow-inner rounded-full cursor-pointer  focus:outline-none text-primary\"\r\n                >\r\n                    Sign In\r\n        </button>\r\n            </div>\r\n        );\r\n    };\r\n    const TypeForm = () => {\r\n        return signType === SignType.register ? <SignUp setsignType={() => setsignType(SignType.login)} seterrorMessage={seterrorMessage} /> : <SignIn seterrorMessage={seterrorMessage} refetchCurrentUser={props.fetchCurrentUser} />;\r\n    };\r\n    return (\r\n        <div className=\" w-2/3 my-auto\">\r\n            <RenderTypeForm />\r\n\r\n            <div className=\"w-full max-w-xl mx-auto mt-4 mb-12 border border-primary pl-5 pr-10 pb-10 md:pl-20 md:pr-20 md:pb-20 pt-5 rounded-lg shadow-lg\">\r\n                <h3 className=\"text-center text-3xl mb-4 font-bold text-primary  \">\r\n                    {signType}\r\n                </h3>\r\n                <TypeForm />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sign;\r\n","/app/src/widgets/ButtonForm.tsx",[],"/app/src/pages/login.tsx",[],"/app/src/Components/RegisterForm.tsx",[],"/app/src/reportWebVitals.ts",[],"/app/src/ApolloClient.tsx",[],"/app/src/widgets/SearchField.tsx",["115"],{"ruleId":"116","severity":1,"message":"117","line":6,"column":40,"nodeType":"118","messageId":"119","endLine":6,"endColumn":48},{"ruleId":"116","severity":1,"message":"120","line":6,"column":50,"nodeType":"118","messageId":"119","endLine":6,"endColumn":63},{"ruleId":"116","severity":1,"message":"121","line":6,"column":88,"nodeType":"118","messageId":"119","endLine":6,"endColumn":93},{"ruleId":"116","severity":1,"message":"122","line":7,"column":10,"nodeType":"118","messageId":"119","endLine":7,"endColumn":23},{"ruleId":"116","severity":1,"message":"123","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":27},{"ruleId":"116","severity":1,"message":"124","line":9,"column":10,"nodeType":"118","messageId":"119","endLine":9,"endColumn":22},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"116","severity":1,"message":"129","line":1,"column":23,"nodeType":"118","messageId":"119","endLine":1,"endColumn":31},{"ruleId":"116","severity":1,"message":"130","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":23},{"ruleId":"116","severity":1,"message":"131","line":3,"column":25,"nodeType":"118","messageId":"119","endLine":3,"endColumn":37},{"ruleId":"116","severity":1,"message":"132","line":3,"column":39,"nodeType":"118","messageId":"119","endLine":3,"endColumn":47},{"ruleId":"116","severity":1,"message":"133","line":3,"column":49,"nodeType":"118","messageId":"119","endLine":3,"endColumn":62},{"ruleId":"116","severity":1,"message":"134","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":22},{"ruleId":"116","severity":1,"message":"135","line":4,"column":24,"nodeType":"118","messageId":"119","endLine":4,"endColumn":45},{"ruleId":"116","severity":1,"message":"136","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":21},{"ruleId":"116","severity":1,"message":"137","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":41,"column":8,"nodeType":"140","endLine":41,"endColumn":28,"suggestions":"141"},{"ruleId":"116","severity":1,"message":"142","line":44,"column":27,"nodeType":"118","messageId":"119","endLine":44,"endColumn":34},{"ruleId":"116","severity":1,"message":"143","line":44,"column":36,"nodeType":"118","messageId":"119","endLine":44,"endColumn":41},{"ruleId":"116","severity":1,"message":"144","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":26},{"ruleId":"116","severity":1,"message":"142","line":16,"column":19,"nodeType":"118","messageId":"119","endLine":16,"endColumn":26},{"ruleId":"116","severity":1,"message":"143","line":16,"column":28,"nodeType":"118","messageId":"119","endLine":16,"endColumn":33},{"ruleId":"116","severity":1,"message":"144","line":3,"column":17,"nodeType":"118","messageId":"119","endLine":3,"endColumn":26},{"ruleId":"116","severity":1,"message":"143","line":12,"column":26,"nodeType":"118","messageId":"119","endLine":12,"endColumn":31},{"ruleId":"116","severity":1,"message":"145","line":14,"column":9,"nodeType":"118","messageId":"119","endLine":14,"endColumn":20},{"ruleId":"125","replacedBy":"146"},{"ruleId":"127","replacedBy":"147"},{"ruleId":"125","replacedBy":"148"},{"ruleId":"127","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":26,"column":7,"nodeType":"118","messageId":"152","endLine":26,"endColumn":34},{"ruleId":"116","severity":1,"message":"142","line":31,"column":19,"nodeType":"118","messageId":"119","endLine":31,"endColumn":26},{"ruleId":"116","severity":1,"message":"143","line":31,"column":28,"nodeType":"118","messageId":"119","endLine":31,"endColumn":33},{"ruleId":"116","severity":1,"message":"153","line":18,"column":12,"nodeType":"118","messageId":"119","endLine":18,"endColumn":24},{"ruleId":"116","severity":1,"message":"154","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":17},"@typescript-eslint/no-unused-vars","'HttpLink' is defined but never used.","Identifier","unusedVar","'InMemoryCache' is defined but never used.","'split' is defined but never used.","'WebSocketLink' is defined but never used.","'getMainDefinition' is defined but never used.","'authHttpLink' is defined but never used.","no-native-reassign",["155"],"no-negated-in-lhs",["156"],"'useQuery' is defined but never used.","'CHAT_MESSAGES' is defined but never used.","'CURRENT_USER' is defined but never used.","'MESSAGES' is defined but never used.","'MESSAGE_ADDED' is defined but never used.","'chatMessages' is defined but never used.","'chatMessagesVariables' is defined but never used.","'currentUser' is defined but never used.","'messages' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["157"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'useEffect' is defined but never used.","'refetchUser' is assigned a value but never used.",["155"],["156"],["155"],["156"],"@typescript-eslint/no-redeclare","'Chats' is already defined.","redeclared","'errorMessage' is assigned a value but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},"Update the dependencies array to be: [props, props.chatMessages]",{"range":"160","text":"161"},[1352,1372],"[props, props.chatMessages]"]