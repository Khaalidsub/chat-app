[{"F:\\programming\\chat-web\\client\\src\\index.tsx":"1","F:\\programming\\chat-web\\client\\src\\pages\\Sign.tsx":"2","F:\\programming\\chat-web\\client\\src\\pages\\Home.tsx":"3","F:\\programming\\chat-web\\client\\src\\utilities\\constants.ts":"4","F:\\programming\\chat-web\\client\\src\\ApolloClient.tsx":"5","F:\\programming\\chat-web\\client\\src\\widgets\\ButtonForm.tsx":"6","F:\\programming\\chat-web\\client\\src\\App.tsx":"7","F:\\programming\\chat-web\\client\\src\\AuthContext.tsx":"8","F:\\programming\\chat-web\\client\\src\\pages\\login.tsx":"9","F:\\programming\\chat-web\\client\\src\\utilities\\schema.ts":"10","F:\\programming\\chat-web\\client\\src\\pages\\chat.tsx":"11","F:\\programming\\chat-web\\client\\src\\widgets\\InputFieldForm.tsx":"12","F:\\programming\\chat-web\\client\\src\\pages\\chats.tsx":"13","F:\\programming\\chat-web\\client\\src\\pages\\register.tsx":"14","F:\\programming\\chat-web\\client\\src\\widgets\\UserCard.tsx":"15","F:\\programming\\chat-web\\client\\src\\widgets\\ChatCard.tsx":"16","F:\\programming\\chat-web\\client\\src\\widgets\\Message.tsx":"17","F:\\programming\\chat-web\\client\\src\\reportWebVitals.ts":"18"},{"size":2337,"mtime":1614773724335,"results":"19","hashOfConfig":"20"},{"size":2481,"mtime":1614774214439,"results":"21","hashOfConfig":"20"},{"size":3614,"mtime":1614830772007,"results":"22","hashOfConfig":"20"},{"size":929,"mtime":1611765962909,"results":"23","hashOfConfig":"20"},{"size":2599,"mtime":1614852077980,"results":"24","hashOfConfig":"20"},{"size":330,"mtime":1611592868132,"results":"25","hashOfConfig":"20"},{"size":1281,"mtime":1614784336755,"results":"26","hashOfConfig":"20"},{"size":813,"mtime":1614773624632,"results":"27","hashOfConfig":"20"},{"size":1172,"mtime":1614773749759,"results":"28","hashOfConfig":"20"},{"size":2408,"mtime":1614829829024,"results":"29","hashOfConfig":"20"},{"size":5160,"mtime":1614827884618,"results":"30","hashOfConfig":"20"},{"size":848,"mtime":1611663469905,"results":"31","hashOfConfig":"20"},{"size":5352,"mtime":1614829357952,"results":"32","hashOfConfig":"20"},{"size":833,"mtime":1611243819060,"results":"33","hashOfConfig":"20"},{"size":954,"mtime":1609511304028,"results":"34","hashOfConfig":"20"},{"size":968,"mtime":1609511304023,"results":"35","hashOfConfig":"20"},{"size":926,"mtime":1609511304025,"results":"36","hashOfConfig":"20"},{"size":425,"mtime":1607328705283,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"fcjnfp",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\programming\\chat-web\\client\\src\\index.tsx",["83","84","85","86","87","88","89","90","91"],"import React, { useContext, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache, NormalizedCacheObject, split } from '@apollo/client';\r\nimport { WebSocketLink } from '@apollo/client/link/ws';\r\nimport { getMainDefinition } from '@apollo/client/utilities';\r\nimport { authHttpLink, AUTH_TOKEN } from './utilities/constants';\r\nimport { AuthContext, AuthContextProvider } from './AuthContext';\r\nimport { useClient } from './ApolloClient';\r\n\r\n\r\n// let cache = new InMemoryCache();\r\n\r\n// const api = process.env.NODE_ENV === 'development' ? 'localhost:3001/graphql' : 'localhost/chat/graphql';\r\n// const ws = process.env.NODE_ENV === 'development' ? 'localhost:3001/graphql' : 'localhost/chat/graphql';\r\n\r\n\r\n\r\n// const wsLink =\r\n//   new WebSocketLink({\r\n\r\n//     uri: `ws://${ws}`,\r\n//     options: {\r\n//       reconnect: true,\r\n//       connectionParams: () => ({\r\n//         authorization: `Bearer ${localStorage.getItem(AUTH_TOKEN)}`,\r\n//       }),\r\n//     },\r\n//   })\r\n\r\n// const httpLink = new HttpLink({\r\n//   uri: `http://${api}`,\r\n\r\n// })\r\n\r\n// const splitLink = split(\r\n//   ({ query }) => {\r\n//     const definition = getMainDefinition(query);\r\n//     return (\r\n//       definition.kind === 'OperationDefinition' &&\r\n//       definition.operation === 'subscription'\r\n//     );\r\n//   },\r\n//   wsLink,\r\n//   authHttpLink.concat(httpLink),\r\n// );\r\n\r\n\r\nconst RenderApp = () => {\r\n  const { auth } = useContext(AuthContext)\r\n  const authClient = useClient();\r\n  useEffect(() => {\r\n    console.log('in renderApp :', auth);\r\n  }, [auth])\r\n\r\n  // const client: ApolloClient<NormalizedCacheObject> = new ApolloClient({ cache: cache, link: splitLink })\r\n\r\n  return (\r\n    <ApolloProvider client={authClient}>\r\n      <App />\r\n    </ApolloProvider>)\r\n}\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthContextProvider >\r\n      <RenderApp />\r\n    </AuthContextProvider>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["92","93"],"F:\\programming\\chat-web\\client\\src\\pages\\Sign.tsx",["94"],"import React, { useState } from \"react\";\r\nimport SignUp from \"./register\";\r\nimport SignIn from \"./login\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nexport interface SignProps extends RouteComponentProps { }\r\n\r\nexport interface SignState { }\r\n\r\nexport enum SignType {\r\n    register = \"Register\",\r\n    login = \"Login\",\r\n}\r\n\r\n\r\n\r\nconst Sign: React.FC<SignProps> = (props: SignProps) => {\r\n    const [signType, setsignType] = useState(SignType.register);\r\n    const [errorMessage, seterrorMessage] = useState(\"\");\r\n    const RenderTypeForm = () => {\r\n        return (\r\n            <div className=\"flex md:px-3 flex-column md:flex-row justify-between justify-items-center\">\r\n                <button\r\n                    onClick={() => setsignType(SignType.register)}\r\n                    className=\"bg-customBlue px-3 py-1 w-1/2 mr-4  focus:bg-customBlue-dark focus:shadow-inner rounded-xl cursor-pointer shadow-md text-white\"\r\n                >\r\n                    Sign Up\r\n        </button>\r\n\r\n                <button\r\n                    onClick={() => setsignType(SignType.login)}\r\n                    className=\"bg-customBlue focus:bg-customBlue-dark px-3 ml-4 py-1 w-1/2 focus:shadow-inner rounded-xl cursor-pointer shadow-md text-white\"\r\n                >\r\n                    Sign In\r\n        </button>\r\n            </div>\r\n        );\r\n    };\r\n    const TypeForm = () => {\r\n        return signType === SignType.register ? <SignUp setsignType={() => setsignType(SignType.login)} seterrorMessage={seterrorMessage} /> : <SignIn goHome={() => props.history.push('/home')} seterrorMessage={seterrorMessage} />;\r\n    };\r\n    return (\r\n        <div className=\"flex justify-center\">\r\n            <div className=\"w-2/3 md:w-1/2  lg:w-2/5 p-4 my-auto flex flex-col justify-between align-center border rounded-xl\">\r\n                <h3 className=\"text-center text-3xl mb-4 font-thin text-primary  \">\r\n                    {signType}\r\n                </h3>\r\n                <div className=\"mx-auto m-5\">\r\n                    <h3 className=\"text-center text-xl italic\">Welcome</h3>\r\n                </div>\r\n                <div className=\"w-full max-w-sm mx-auto\">\r\n                    <RenderTypeForm />\r\n                </div>\r\n\r\n\r\n                <div className=\"w-full max-w-xl mx-auto mt-4  px-2 pb-10 lg:px-20 md:px-5 md:pb-2 pt-5 \">\r\n\r\n                    <TypeForm />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sign;\r\n","F:\\programming\\chat-web\\client\\src\\pages\\Home.tsx",["95","96","97","98"],"import { useQuery } from '@apollo/client'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { CHATS, CHAT_ADDED, CHAT_MESSAGES, MESSAGE_ADDED } from '../utilities/schema'\r\nimport { chatMessages, chatMessagesVariables } from '../utilities/__generated__/chatMessages'\r\nimport { chats } from '../utilities/__generated__/chats'\r\nimport { currentUser_currentUser } from '../utilities/__generated__/currentUser'\r\nimport { onChatCreated, onChatCreated_onChatCreations } from '../utilities/__generated__/onChatCreated'\r\nimport { onChatMessage } from '../utilities/__generated__/onChatMessage'\r\nimport Chat from './chat'\r\nimport Chats from './chats'\r\n\r\nexport interface HomeProps {\r\n    currentUser: currentUser_currentUser\r\n}\r\n\r\nfunction Home(props: HomeProps) {\r\n    const { data, loading, error, subscribeToMore } = useQuery<chats>(CHATS)\r\n    const [currentChat, setCurrentChat] = useState('');\r\n    const [showChat, setshowChat] = useState(true)\r\n    // useEffect(() => {\r\n\r\n    //     // if (showChat) setCurrentChat(null)\r\n\r\n    // }, [showChat])\r\n    const { ...result } = useQuery<chatMessages, chatMessagesVariables>(CHAT_MESSAGES, { variables: { id: currentChat, } })\r\n    const settingCurrentChat = (value: string) => {\r\n        setCurrentChat(value)\r\n        setshowChat(false);\r\n    }\r\n\r\n    const subscribeToMoreChats = () =>\r\n        subscribeToMore<onChatCreated>({\r\n            document: CHAT_ADDED,\r\n            updateQuery: (prev, { subscriptionData }) => {\r\n                console.log('in sub sub', subscriptionData);\r\n\r\n                if (!subscriptionData.data) return prev\r\n                const newChats = subscriptionData.data.onChatCreations\r\n                return Object.assign({}, prev, {\r\n                    chats: [...prev.chats, newChats]\r\n                });\r\n\r\n            }\r\n        })\r\n\r\n\r\n    const subscribeToNewMessages = () =>\r\n        result.subscribeToMore<onChatMessage>({\r\n            document: MESSAGE_ADDED,\r\n            variables: { id: currentChat },\r\n            updateQuery: (prev, { subscriptionData }) => {\r\n                console.log('in sub sub', subscriptionData);\r\n\r\n                if (!subscriptionData.data) return prev\r\n                const newMessages = subscriptionData.data.onChatMessage\r\n                return Object.assign({}, prev, {\r\n                    chatMessages: [...prev.chatMessages, newMessages]\r\n                });\r\n\r\n\r\n            }\r\n\r\n        })\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"flex justify-center\">\r\n\r\n\r\n                <div className=\"md:h-2/3 md:w-2/3 w-full h-4/5 px-4  mx-auto my-auto flex flex-row py-px border border-gray-50 bg-gray-50 rounded-3xl shadow-lg\">\r\n                    <div className={`md:w-2/5 md:flex w-full ${showChat ? '' : 'hidden'}`}>\r\n                        <Chats currentChat={currentChat} subscribeToMore={subscribeToMoreChats} chats={data ? data.chats : []} onClick={settingCurrentChat} currentUser={props.currentUser.id} />\r\n                    </div>\r\n\r\n                    <div className={`w-full md:w-3/5 pt-3 rounded-3xl md:block ${!showChat ? '' : 'hidden'} `}>\r\n                        <button className='text-customBlue pl-2 pb-2 md:hidden' onClick={() => setshowChat(true)}>Back</button>\r\n                        {currentChat.length > 1 ? <Chat chatMessages={result.data ? result.data.chatMessages : []} user={props.currentUser} subscribeToMore={subscribeToNewMessages} currentChat={currentChat} /> : <div></div>}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Home",["99","100"],"F:\\programming\\chat-web\\client\\src\\utilities\\constants.ts",["101"],"import { setContext } from \"@apollo/client/link/context\";\r\n\r\nexport const AUTH_TOKEN = \"auth-token\";\r\nexport const authHttpLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem(AUTH_TOKEN);\r\n\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst asyncAuthLink = setContext(\r\n  (request) =>\r\n    new Promise((success, fail) => {\r\n      // do some async lookup here\r\n      setTimeout(() => {\r\n        success({ token: \"async found token\" });\r\n      }, 10);\r\n    })\r\n);\r\n// export const authWsLink = setContext((req,) => {\r\n//   const token = localStorage.getItem(AUTH_TOKEN);\r\n//   // console.log(\"token\", token);'\r\n\r\n//   return {\r\n//    = {\r\n\r\n//     }\r\n//     options: {\r\n//       reconnect: true,\r\n//       connectionParams: {\r\n//         authorization: token ? `Bearer ${token}` : \"\",\r\n//       },\r\n//     },\r\n//   };\r\n// });\r\n",["102","103"],"F:\\programming\\chat-web\\client\\src\\ApolloClient.tsx",["104","105","106","107"],"F:\\programming\\chat-web\\client\\src\\widgets\\ButtonForm.tsx",[],"F:\\programming\\chat-web\\client\\src\\App.tsx",["108","109","110","111","112","113","114"],"F:\\programming\\chat-web\\client\\src\\AuthContext.tsx",[],"F:\\programming\\chat-web\\client\\src\\pages\\login.tsx",["115"],"import { useMutation } from \"@apollo/client\";\r\nimport React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../AuthContext\";\r\nimport LoginForm from \"../Components/LoginForm\";\r\nimport { AUTH_TOKEN } from \"../utilities/constants\";\r\nimport { LOGIN_USER } from \"../utilities/schema\";\r\nimport * as LoginTypes from \"../utilities/__generated__/login\";\r\n\r\nexport interface LoginProps {\r\n\r\n    seterrorMessage: Function\r\n    goHome: Function\r\n\r\n}\r\n\r\nexport interface LoginState {\r\n\r\n}\r\n\r\nconst Login = (props: LoginProps) => {\r\n    const { auth, setAuth } = useContext(AuthContext)\r\n    const [login, { loading, error, }] = useMutation<LoginTypes.login, LoginTypes.loginVariables>(LOGIN_USER, {\r\n        onCompleted(data?) {\r\n\r\n\r\n            if (data && data.loginUser) {\r\n                localStorage.setItem(AUTH_TOKEN, data.loginUser)\r\n\r\n                setAuth(data.loginUser)\r\n                props.goHome()\r\n            }\r\n\r\n\r\n            // \r\n\r\n        }\r\n    })\r\n    if (loading) {\r\n        return <div>loading</div>\r\n    }\r\n    if (error) {\r\n        props.seterrorMessage(error)\r\n    }\r\n\r\n    return (<LoginForm login={login} />);\r\n\r\n}\r\n\r\nexport default Login;",["116","117"],"F:\\programming\\chat-web\\client\\src\\utilities\\schema.ts",[],"F:\\programming\\chat-web\\client\\src\\pages\\chat.tsx",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"F:\\programming\\chat-web\\client\\src\\widgets\\InputFieldForm.tsx",[],"F:\\programming\\chat-web\\client\\src\\pages\\chats.tsx",["134","135","136","137"],"F:\\programming\\chat-web\\client\\src\\pages\\register.tsx",[],"F:\\programming\\chat-web\\client\\src\\widgets\\UserCard.tsx",[],"F:\\programming\\chat-web\\client\\src\\widgets\\ChatCard.tsx",[],"F:\\programming\\chat-web\\client\\src\\widgets\\Message.tsx",[],"F:\\programming\\chat-web\\client\\src\\reportWebVitals.ts",[],{"ruleId":"138","severity":1,"message":"139","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":22},{"ruleId":"138","severity":1,"message":"142","line":6,"column":40,"nodeType":"140","messageId":"141","endLine":6,"endColumn":48},{"ruleId":"138","severity":1,"message":"143","line":6,"column":50,"nodeType":"140","messageId":"141","endLine":6,"endColumn":63},{"ruleId":"138","severity":1,"message":"144","line":6,"column":65,"nodeType":"140","messageId":"141","endLine":6,"endColumn":86},{"ruleId":"138","severity":1,"message":"145","line":6,"column":88,"nodeType":"140","messageId":"141","endLine":6,"endColumn":93},{"ruleId":"138","severity":1,"message":"146","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":23},{"ruleId":"138","severity":1,"message":"147","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":27},{"ruleId":"138","severity":1,"message":"148","line":9,"column":10,"nodeType":"140","messageId":"141","endLine":9,"endColumn":22},{"ruleId":"138","severity":1,"message":"149","line":9,"column":24,"nodeType":"140","messageId":"141","endLine":9,"endColumn":34},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"138","severity":1,"message":"154","line":19,"column":12,"nodeType":"140","messageId":"141","endLine":19,"endColumn":24},{"ruleId":"138","severity":1,"message":"155","line":2,"column":17,"nodeType":"140","messageId":"141","endLine":2,"endColumn":26},{"ruleId":"138","severity":1,"message":"156","line":7,"column":25,"nodeType":"140","messageId":"141","endLine":7,"endColumn":54},{"ruleId":"138","severity":1,"message":"157","line":17,"column":19,"nodeType":"140","messageId":"141","endLine":17,"endColumn":26},{"ruleId":"138","severity":1,"message":"158","line":17,"column":28,"nodeType":"140","messageId":"141","endLine":17,"endColumn":33},{"ruleId":"150","replacedBy":"159"},{"ruleId":"152","replacedBy":"160"},{"ruleId":"138","severity":1,"message":"161","line":15,"column":7,"nodeType":"140","messageId":"141","endLine":15,"endColumn":20},{"ruleId":"150","replacedBy":"162"},{"ruleId":"152","replacedBy":"163"},{"ruleId":"138","severity":1,"message":"164","line":1,"column":13,"nodeType":"140","messageId":"141","endLine":1,"endColumn":18},{"ruleId":"138","severity":1,"message":"148","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":22},{"ruleId":"138","severity":1,"message":"149","line":6,"column":24,"nodeType":"140","messageId":"141","endLine":6,"endColumn":34},{"ruleId":"138","severity":1,"message":"155","line":7,"column":22,"nodeType":"140","messageId":"141","endLine":7,"endColumn":31},{"ruleId":"138","severity":1,"message":"165","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":23},{"ruleId":"138","severity":1,"message":"166","line":3,"column":40,"nodeType":"140","messageId":"141","endLine":3,"endColumn":47},{"ruleId":"138","severity":1,"message":"148","line":10,"column":10,"nodeType":"140","messageId":"141","endLine":10,"endColumn":22},{"ruleId":"138","severity":1,"message":"167","line":15,"column":3,"nodeType":"140","messageId":"141","endLine":15,"endColumn":7},{"ruleId":"138","severity":1,"message":"157","line":22,"column":17,"nodeType":"140","messageId":"141","endLine":22,"endColumn":24},{"ruleId":"138","severity":1,"message":"158","line":22,"column":26,"nodeType":"140","messageId":"141","endLine":22,"endColumn":31},{"ruleId":"168","severity":1,"message":"169","line":37,"column":6,"nodeType":"170","endLine":37,"endColumn":12,"suggestions":"171"},{"ruleId":"138","severity":1,"message":"172","line":21,"column":13,"nodeType":"140","messageId":"141","endLine":21,"endColumn":17},{"ruleId":"150","replacedBy":"173"},{"ruleId":"152","replacedBy":"174"},{"ruleId":"138","severity":1,"message":"175","line":1,"column":23,"nodeType":"140","messageId":"141","endLine":1,"endColumn":31},{"ruleId":"138","severity":1,"message":"176","line":1,"column":33,"nodeType":"140","messageId":"141","endLine":1,"endColumn":48},{"ruleId":"138","severity":1,"message":"166","line":2,"column":28,"nodeType":"140","messageId":"141","endLine":2,"endColumn":35},{"ruleId":"138","severity":1,"message":"177","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":23},{"ruleId":"138","severity":1,"message":"178","line":3,"column":25,"nodeType":"140","messageId":"141","endLine":3,"endColumn":37},{"ruleId":"138","severity":1,"message":"179","line":3,"column":39,"nodeType":"140","messageId":"141","endLine":3,"endColumn":47},{"ruleId":"138","severity":1,"message":"180","line":3,"column":49,"nodeType":"140","messageId":"141","endLine":3,"endColumn":62},{"ruleId":"138","severity":1,"message":"181","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":22},{"ruleId":"138","severity":1,"message":"182","line":4,"column":24,"nodeType":"140","messageId":"141","endLine":4,"endColumn":45},{"ruleId":"138","severity":1,"message":"183","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":21},{"ruleId":"138","severity":1,"message":"184","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":18},{"ruleId":"138","severity":1,"message":"185","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":32},{"ruleId":"138","severity":1,"message":"186","line":7,"column":34,"nodeType":"140","messageId":"141","endLine":7,"endColumn":61},{"ruleId":"168","severity":1,"message":"187","line":42,"column":8,"nodeType":"170","endLine":42,"endColumn":28,"suggestions":"188"},{"ruleId":"138","severity":1,"message":"157","line":51,"column":27,"nodeType":"140","messageId":"141","endLine":51,"endColumn":34},{"ruleId":"138","severity":1,"message":"158","line":51,"column":36,"nodeType":"140","messageId":"141","endLine":51,"endColumn":41},{"ruleId":"189","severity":1,"message":"190","line":27,"column":7,"nodeType":"140","messageId":"191","endLine":27,"endColumn":34},{"ruleId":"138","severity":1,"message":"157","line":32,"column":19,"nodeType":"140","messageId":"141","endLine":32,"endColumn":26},{"ruleId":"138","severity":1,"message":"158","line":32,"column":28,"nodeType":"140","messageId":"141","endLine":32,"endColumn":33},{"ruleId":"168","severity":1,"message":"187","line":55,"column":8,"nodeType":"170","endLine":55,"endColumn":21,"suggestions":"192"},"@typescript-eslint/no-unused-vars","'ApolloClient' is defined but never used.","Identifier","unusedVar","'HttpLink' is defined but never used.","'InMemoryCache' is defined but never used.","'NormalizedCacheObject' is defined but never used.","'split' is defined but never used.","'WebSocketLink' is defined but never used.","'getMainDefinition' is defined but never used.","'authHttpLink' is defined but never used.","'AUTH_TOKEN' is defined but never used.","no-native-reassign",["193"],"no-negated-in-lhs",["194"],"'errorMessage' is assigned a value but never used.","'useEffect' is defined but never used.","'onChatCreated_onChatCreations' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.",["193"],["194"],"'asyncAuthLink' is assigned a value but never used.",["193"],["194"],"'React' is defined but never used.","'NetworkStatus' is defined but never used.","'useMemo' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'refetch'. Either include them or remove the dependency array.","ArrayExpression",["195"],"'auth' is assigned a value but never used.",["193"],["194"],"'useQuery' is defined but never used.","'useSubscription' is defined but never used.","'CHAT_MESSAGES' is defined but never used.","'CURRENT_USER' is defined but never used.","'MESSAGES' is defined but never used.","'MESSAGE_ADDED' is defined but never used.","'chatMessages' is defined but never used.","'chatMessagesVariables' is defined but never used.","'currentUser' is defined but never used.","'messages' is defined but never used.","'onChatMessageVariables' is defined but never used.","'onChatMessage_onChatMessage' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["196"],"@typescript-eslint/no-redeclare","'Chats' is already defined.","redeclared",["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [auth, data, refetch]",{"range":"204","text":"205"},"Update the dependencies array to be: [props, props.chatMessages]",{"range":"206","text":"207"},"Update the dependencies array to be: [props, props.chats]",{"range":"208","text":"209"},[981,987],"[auth, data, refetch]",[1641,1661],"[props, props.chatMessages]",[1712,1725],"[props, props.chats]"]